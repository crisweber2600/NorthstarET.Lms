openapi: 3.1.0
info:
  title: NorthStar LMS API
  version: 1.0.0
  description: Authoritative roster service. Coarse-grained queries; tenant-isolated;
    problem+json errors; idempotent POSTs.
servers:
- url: https://{env}.northstar.local/api
  variables:
    env:
      default: dev
security:
- bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    TenantId:
      name: X-Tenant-Id
      in: header
      required: true
      schema:
        type: string
        format: uuid
    CorrelationId:
      name: X-Correlation-Id
      in: header
      required: false
      schema:
        type: string
        format: uuid
    CausationId:
      name: X-Causation-Id
      in: header
      required: false
      schema:
        type: string
        format: uuid
    PageSize:
      name: pageSize
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 500
      required: false
    NextToken:
      name: nextToken
      in: query
      schema:
        type: string
      required: false
  headers:
    Deprecation:
      schema:
        type: string
    Sunset:
      schema:
        type: string
        format: date-time
    Retry-After:
      schema:
        type: string
  schemas:
    Problem:
      type: object
      properties:
        type:
          type: string
          format: uri
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
        instance:
          type: string
          format: uri
        traceId:
          type: string
        correlationId:
          type: string
      required:
      - title
      - status
    Tenant:
      type: object
      properties:
        tenantId:
          type: string
          format: uuid
        name:
          type: string
        region:
          type: string
        status:
          type: string
      required:
      - tenantId
      - name
      - status
    School:
      type: object
      properties:
        schoolId:
          type: string
          format: uuid
        name:
          type: string
        status:
          type: string
        externalRefs:
          type: object
      required:
      - schoolId
      - name
      - status
    Class:
      type: object
      properties:
        classId:
          type: string
          format: uuid
        schoolId:
          type: string
          format: uuid
        name:
          type: string
        term:
          type: string
        subject:
          type: string
        status:
          type: string
        externalRefs:
          type: object
      required:
      - classId
      - schoolId
      - name
      - status
    StudentSummary:
      type: object
      properties:
        studentId:
          type: string
          format: uuid
        givenName:
          type: string
        familyName:
          type: string
        status:
          type: string
        externalRefs:
          type: object
      required:
      - studentId
      - givenName
      - familyName
      - status
    TeacherSummary:
      type: object
      properties:
        teacherId:
          type: string
          format: uuid
        givenName:
          type: string
        familyName:
          type: string
        status:
          type: string
      required:
      - teacherId
      - givenName
      - familyName
      - status
    EnrollmentRequest:
      type: object
      properties:
        studentId:
          type: string
          format: uuid
        classId:
          type: string
          format: uuid
        effectiveDate:
          type: string
          format: date
      required:
      - studentId
      - classId
    CreateSchoolRequest:
      type: object
      properties:
        name:
          type: string
        externalRefs:
          type: object
      required:
      - name
    CreateClassRequest:
      type: object
      properties:
        schoolId:
          type: string
          format: uuid
        name:
          type: string
        term:
          type: string
        subject:
          type: string
        externalRefs:
          type: object
      required:
      - schoolId
      - name
    CreateStudentRequest:
      type: object
      properties:
        givenName:
          type: string
        familyName:
          type: string
        externalRefs:
          type: object
      required:
      - givenName
      - familyName
    CreateTeacherRequest:
      type: object
      properties:
        givenName:
          type: string
        familyName:
          type: string
        externalRefs:
          type: object
      required:
      - givenName
      - familyName
    MembersResponse:
      type: object
      properties:
        classId:
          type: string
          format: uuid
        teachers:
          type: array
          items:
            $ref: '#/$defs/TeacherSummary'
        students:
          type: array
          items:
            $ref: '#/$defs/StudentSummary'
      required:
      - classId
      - teachers
      - students
  $defs:
    StudentSummary:
      $ref: '#/components/schemas/StudentSummary'
    TeacherSummary:
      $ref: '#/components/schemas/TeacherSummary'
  responses:
    ProblemResponse:
      description: Problem response
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
paths:
  /v1/tenants:
    post:
      operationId: CreateTenant
      summary: Provision a new tenant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                region:
                  type: string
                externalRefs:
                  type: object
              required:
              - name
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        '400':
          $ref: '#/components/responses/ProblemResponse'
        '401':
          $ref: '#/components/responses/ProblemResponse'
        '403':
          $ref: '#/components/responses/ProblemResponse'
        '404':
          $ref: '#/components/responses/ProblemResponse'
        '409':
          $ref: '#/components/responses/ProblemResponse'
        '422':
          $ref: '#/components/responses/ProblemResponse'
        '429':
          $ref: '#/components/responses/ProblemResponse'
        '500':
          $ref: '#/components/responses/ProblemResponse'
      parameters:
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/CorrelationId'
      - $ref: '#/components/parameters/CausationId'
  /v1/tenants/{tenantId}:
    get:
      operationId: GetTenant
      summary: Get tenant metadata
      parameters:
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/CorrelationId'
      - $ref: '#/components/parameters/CausationId'
      - name: tenantId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        '400':
          $ref: '#/components/responses/ProblemResponse'
        '401':
          $ref: '#/components/responses/ProblemResponse'
        '403':
          $ref: '#/components/responses/ProblemResponse'
        '404':
          $ref: '#/components/responses/ProblemResponse'
        '409':
          $ref: '#/components/responses/ProblemResponse'
        '422':
          $ref: '#/components/responses/ProblemResponse'
        '429':
          $ref: '#/components/responses/ProblemResponse'
        '500':
          $ref: '#/components/responses/ProblemResponse'
  /v1/schools:
    post:
      operationId: CreateSchool
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSchoolRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/School'
        '400':
          $ref: '#/components/responses/ProblemResponse'
        '401':
          $ref: '#/components/responses/ProblemResponse'
        '403':
          $ref: '#/components/responses/ProblemResponse'
        '404':
          $ref: '#/components/responses/ProblemResponse'
        '409':
          $ref: '#/components/responses/ProblemResponse'
        '422':
          $ref: '#/components/responses/ProblemResponse'
        '429':
          $ref: '#/components/responses/ProblemResponse'
        '500':
          $ref: '#/components/responses/ProblemResponse'
      parameters:
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/CorrelationId'
      - $ref: '#/components/parameters/CausationId'
    get:
      operationId: ListSchools
      parameters:
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/CorrelationId'
      - $ref: '#/components/parameters/CausationId'
      - $ref: '#/components/parameters/PageSize'
      - $ref: '#/components/parameters/NextToken'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/School'
                  nextToken:
                    type: string
        '400':
          $ref: '#/components/responses/ProblemResponse'
        '401':
          $ref: '#/components/responses/ProblemResponse'
        '403':
          $ref: '#/components/responses/ProblemResponse'
        '404':
          $ref: '#/components/responses/ProblemResponse'
        '409':
          $ref: '#/components/responses/ProblemResponse'
        '422':
          $ref: '#/components/responses/ProblemResponse'
        '429':
          $ref: '#/components/responses/ProblemResponse'
        '500':
          $ref: '#/components/responses/ProblemResponse'
  /v1/schools/{schoolId}:
    get:
      operationId: GetSchool
      parameters:
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/CorrelationId'
      - $ref: '#/components/parameters/CausationId'
      - name: schoolId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/School'
        '400':
          $ref: '#/components/responses/ProblemResponse'
        '401':
          $ref: '#/components/responses/ProblemResponse'
        '403':
          $ref: '#/components/responses/ProblemResponse'
        '404':
          $ref: '#/components/responses/ProblemResponse'
        '409':
          $ref: '#/components/responses/ProblemResponse'
        '422':
          $ref: '#/components/responses/ProblemResponse'
        '429':
          $ref: '#/components/responses/ProblemResponse'
        '500':
          $ref: '#/components/responses/ProblemResponse'
    patch:
      operationId: UpdateSchool
      parameters:
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/CorrelationId'
      - $ref: '#/components/parameters/CausationId'
      - name: schoolId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/School'
        '400':
          $ref: '#/components/responses/ProblemResponse'
        '401':
          $ref: '#/components/responses/ProblemResponse'
        '403':
          $ref: '#/components/responses/ProblemResponse'
        '404':
          $ref: '#/components/responses/ProblemResponse'
        '409':
          $ref: '#/components/responses/ProblemResponse'
        '422':
          $ref: '#/components/responses/ProblemResponse'
        '429':
          $ref: '#/components/responses/ProblemResponse'
        '500':
          $ref: '#/components/responses/ProblemResponse'
    delete:
      operationId: ArchiveSchool
      parameters:
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/CorrelationId'
      - $ref: '#/components/parameters/CausationId'
      - name: schoolId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '204':
          description: Archived
        '400':
          $ref: '#/components/responses/ProblemResponse'
        '401':
          $ref: '#/components/responses/ProblemResponse'
        '403':
          $ref: '#/components/responses/ProblemResponse'
        '404':
          $ref: '#/components/responses/ProblemResponse'
        '409':
          $ref: '#/components/responses/ProblemResponse'
        '422':
          $ref: '#/components/responses/ProblemResponse'
        '429':
          $ref: '#/components/responses/ProblemResponse'
        '500':
          $ref: '#/components/responses/ProblemResponse'
  /v1/classes:
    post:
      operationId: CreateClass
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClassRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
        '400':
          $ref: '#/components/responses/ProblemResponse'
        '401':
          $ref: '#/components/responses/ProblemResponse'
        '403':
          $ref: '#/components/responses/ProblemResponse'
        '404':
          $ref: '#/components/responses/ProblemResponse'
        '409':
          $ref: '#/components/responses/ProblemResponse'
        '422':
          $ref: '#/components/responses/ProblemResponse'
        '429':
          $ref: '#/components/responses/ProblemResponse'
        '500':
          $ref: '#/components/responses/ProblemResponse'
      parameters:
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/CorrelationId'
      - $ref: '#/components/parameters/CausationId'
    get:
      operationId: ListClasses
      parameters:
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/CorrelationId'
      - $ref: '#/components/parameters/CausationId'
      - $ref: '#/components/parameters/PageSize'
      - $ref: '#/components/parameters/NextToken'
      - name: schoolId
        in: query
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Class'
                  nextToken:
                    type: string
        '400':
          $ref: '#/components/responses/ProblemResponse'
        '401':
          $ref: '#/components/responses/ProblemResponse'
        '403':
          $ref: '#/components/responses/ProblemResponse'
        '404':
          $ref: '#/components/responses/ProblemResponse'
        '409':
          $ref: '#/components/responses/ProblemResponse'
        '422':
          $ref: '#/components/responses/ProblemResponse'
        '429':
          $ref: '#/components/responses/ProblemResponse'
        '500':
          $ref: '#/components/responses/ProblemResponse'
  /v1/classes/{classId}:
    get:
      operationId: GetClass
      parameters:
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/CorrelationId'
      - $ref: '#/components/parameters/CausationId'
      - name: classId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
        '400':
          $ref: '#/components/responses/ProblemResponse'
        '401':
          $ref: '#/components/responses/ProblemResponse'
        '403':
          $ref: '#/components/responses/ProblemResponse'
        '404':
          $ref: '#/components/responses/ProblemResponse'
        '409':
          $ref: '#/components/responses/ProblemResponse'
        '422':
          $ref: '#/components/responses/ProblemResponse'
        '429':
          $ref: '#/components/responses/ProblemResponse'
        '500':
          $ref: '#/components/responses/ProblemResponse'
    patch:
      operationId: UpdateClass
      parameters:
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/CorrelationId'
      - $ref: '#/components/parameters/CausationId'
      - name: classId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
        '400':
          $ref: '#/components/responses/ProblemResponse'
        '401':
          $ref: '#/components/responses/ProblemResponse'
        '403':
          $ref: '#/components/responses/ProblemResponse'
        '404':
          $ref: '#/components/responses/ProblemResponse'
        '409':
          $ref: '#/components/responses/ProblemResponse'
        '422':
          $ref: '#/components/responses/ProblemResponse'
        '429':
          $ref: '#/components/responses/ProblemResponse'
        '500':
          $ref: '#/components/responses/ProblemResponse'
    delete:
      operationId: ArchiveClass
      parameters:
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/CorrelationId'
      - $ref: '#/components/parameters/CausationId'
      - name: classId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '204':
          description: Archived
        '400':
          $ref: '#/components/responses/ProblemResponse'
        '401':
          $ref: '#/components/responses/ProblemResponse'
        '403':
          $ref: '#/components/responses/ProblemResponse'
        '404':
          $ref: '#/components/responses/ProblemResponse'
        '409':
          $ref: '#/components/responses/ProblemResponse'
        '422':
          $ref: '#/components/responses/ProblemResponse'
        '429':
          $ref: '#/components/responses/ProblemResponse'
        '500':
          $ref: '#/components/responses/ProblemResponse'
  /v1/students:
    post:
      operationId: CreateStudent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStudentRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentSummary'
        '400':
          $ref: '#/components/responses/ProblemResponse'
        '401':
          $ref: '#/components/responses/ProblemResponse'
        '403':
          $ref: '#/components/responses/ProblemResponse'
        '404':
          $ref: '#/components/responses/ProblemResponse'
        '409':
          $ref: '#/components/responses/ProblemResponse'
        '422':
          $ref: '#/components/responses/ProblemResponse'
        '429':
          $ref: '#/components/responses/ProblemResponse'
        '500':
          $ref: '#/components/responses/ProblemResponse'
      parameters:
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/CorrelationId'
      - $ref: '#/components/parameters/CausationId'
    get:
      operationId: ListStudents
      parameters:
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/CorrelationId'
      - $ref: '#/components/parameters/CausationId'
      - $ref: '#/components/parameters/PageSize'
      - $ref: '#/components/parameters/NextToken'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/StudentSummary'
                  nextToken:
                    type: string
        '400':
          $ref: '#/components/responses/ProblemResponse'
        '401':
          $ref: '#/components/responses/ProblemResponse'
        '403':
          $ref: '#/components/responses/ProblemResponse'
        '404':
          $ref: '#/components/responses/ProblemResponse'
        '409':
          $ref: '#/components/responses/ProblemResponse'
        '422':
          $ref: '#/components/responses/ProblemResponse'
        '429':
          $ref: '#/components/responses/ProblemResponse'
        '500':
          $ref: '#/components/responses/ProblemResponse'
  /v1/students/{studentId}:
    get:
      operationId: GetStudent
      parameters:
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/CorrelationId'
      - $ref: '#/components/parameters/CausationId'
      - name: studentId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentSummary'
        '400':
          $ref: '#/components/responses/ProblemResponse'
        '401':
          $ref: '#/components/responses/ProblemResponse'
        '403':
          $ref: '#/components/responses/ProblemResponse'
        '404':
          $ref: '#/components/responses/ProblemResponse'
        '409':
          $ref: '#/components/responses/ProblemResponse'
        '422':
          $ref: '#/components/responses/ProblemResponse'
        '429':
          $ref: '#/components/responses/ProblemResponse'
        '500':
          $ref: '#/components/responses/ProblemResponse'
    patch:
      operationId: UpdateStudent
      parameters:
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/CorrelationId'
      - $ref: '#/components/parameters/CausationId'
      - name: studentId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentSummary'
        '400':
          $ref: '#/components/responses/ProblemResponse'
        '401':
          $ref: '#/components/responses/ProblemResponse'
        '403':
          $ref: '#/components/responses/ProblemResponse'
        '404':
          $ref: '#/components/responses/ProblemResponse'
        '409':
          $ref: '#/components/responses/ProblemResponse'
        '422':
          $ref: '#/components/responses/ProblemResponse'
        '429':
          $ref: '#/components/responses/ProblemResponse'
        '500':
          $ref: '#/components/responses/ProblemResponse'
  /v1/students/{studentId}:deactivate:
    post:
      operationId: DeactivateStudent
      parameters:
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/CorrelationId'
      - $ref: '#/components/parameters/CausationId'
      - name: studentId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentSummary'
        '400':
          $ref: '#/components/responses/ProblemResponse'
        '401':
          $ref: '#/components/responses/ProblemResponse'
        '403':
          $ref: '#/components/responses/ProblemResponse'
        '404':
          $ref: '#/components/responses/ProblemResponse'
        '409':
          $ref: '#/components/responses/ProblemResponse'
        '422':
          $ref: '#/components/responses/ProblemResponse'
        '429':
          $ref: '#/components/responses/ProblemResponse'
        '500':
          $ref: '#/components/responses/ProblemResponse'
  /v1/teachers:
    post:
      operationId: CreateTeacher
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeacherRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherSummary'
        '400':
          $ref: '#/components/responses/ProblemResponse'
        '401':
          $ref: '#/components/responses/ProblemResponse'
        '403':
          $ref: '#/components/responses/ProblemResponse'
        '404':
          $ref: '#/components/responses/ProblemResponse'
        '409':
          $ref: '#/components/responses/ProblemResponse'
        '422':
          $ref: '#/components/responses/ProblemResponse'
        '429':
          $ref: '#/components/responses/ProblemResponse'
        '500':
          $ref: '#/components/responses/ProblemResponse'
      parameters:
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/CorrelationId'
      - $ref: '#/components/parameters/CausationId'
    get:
      operationId: ListTeachers
      parameters:
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/CorrelationId'
      - $ref: '#/components/parameters/CausationId'
      - $ref: '#/components/parameters/PageSize'
      - $ref: '#/components/parameters/NextToken'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/TeacherSummary'
                  nextToken:
                    type: string
        '400':
          $ref: '#/components/responses/ProblemResponse'
        '401':
          $ref: '#/components/responses/ProblemResponse'
        '403':
          $ref: '#/components/responses/ProblemResponse'
        '404':
          $ref: '#/components/responses/ProblemResponse'
        '409':
          $ref: '#/components/responses/ProblemResponse'
        '422':
          $ref: '#/components/responses/ProblemResponse'
        '429':
          $ref: '#/components/responses/ProblemResponse'
        '500':
          $ref: '#/components/responses/ProblemResponse'
  /v1/teachers/{teacherId}:
    get:
      operationId: GetTeacher
      parameters:
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/CorrelationId'
      - $ref: '#/components/parameters/CausationId'
      - name: teacherId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherSummary'
        '400':
          $ref: '#/components/responses/ProblemResponse'
        '401':
          $ref: '#/components/responses/ProblemResponse'
        '403':
          $ref: '#/components/responses/ProblemResponse'
        '404':
          $ref: '#/components/responses/ProblemResponse'
        '409':
          $ref: '#/components/responses/ProblemResponse'
        '422':
          $ref: '#/components/responses/ProblemResponse'
        '429':
          $ref: '#/components/responses/ProblemResponse'
        '500':
          $ref: '#/components/responses/ProblemResponse'
    patch:
      operationId: UpdateTeacher
      parameters:
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/CorrelationId'
      - $ref: '#/components/parameters/CausationId'
      - name: teacherId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherSummary'
        '400':
          $ref: '#/components/responses/ProblemResponse'
        '401':
          $ref: '#/components/responses/ProblemResponse'
        '403':
          $ref: '#/components/responses/ProblemResponse'
        '404':
          $ref: '#/components/responses/ProblemResponse'
        '409':
          $ref: '#/components/responses/ProblemResponse'
        '422':
          $ref: '#/components/responses/ProblemResponse'
        '429':
          $ref: '#/components/responses/ProblemResponse'
        '500':
          $ref: '#/components/responses/ProblemResponse'
  /v1/enrollments:
    post:
      operationId: AddEnrollment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollmentRequest'
      responses:
        '201':
          description: Created
        '400':
          $ref: '#/components/responses/ProblemResponse'
        '401':
          $ref: '#/components/responses/ProblemResponse'
        '403':
          $ref: '#/components/responses/ProblemResponse'
        '404':
          $ref: '#/components/responses/ProblemResponse'
        '409':
          $ref: '#/components/responses/ProblemResponse'
        '422':
          $ref: '#/components/responses/ProblemResponse'
        '429':
          $ref: '#/components/responses/ProblemResponse'
        '500':
          $ref: '#/components/responses/ProblemResponse'
      parameters:
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/CorrelationId'
      - $ref: '#/components/parameters/CausationId'
    delete:
      operationId: RemoveEnrollment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollmentRequest'
      responses:
        '204':
          description: Removed
        '400':
          $ref: '#/components/responses/ProblemResponse'
        '401':
          $ref: '#/components/responses/ProblemResponse'
        '403':
          $ref: '#/components/responses/ProblemResponse'
        '404':
          $ref: '#/components/responses/ProblemResponse'
        '409':
          $ref: '#/components/responses/ProblemResponse'
        '422':
          $ref: '#/components/responses/ProblemResponse'
        '429':
          $ref: '#/components/responses/ProblemResponse'
        '500':
          $ref: '#/components/responses/ProblemResponse'
      parameters:
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/CorrelationId'
      - $ref: '#/components/parameters/CausationId'
  /v1/classes/{classId}/teachers:
    post:
      operationId: AssignTeacherToClass
      parameters:
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/CorrelationId'
      - $ref: '#/components/parameters/CausationId'
      - name: classId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                teacherId:
                  type: string
                  format: uuid
                role:
                  type: string
              required:
              - teacherId
      responses:
        '201':
          description: Assigned
        '400':
          $ref: '#/components/responses/ProblemResponse'
        '401':
          $ref: '#/components/responses/ProblemResponse'
        '403':
          $ref: '#/components/responses/ProblemResponse'
        '404':
          $ref: '#/components/responses/ProblemResponse'
        '409':
          $ref: '#/components/responses/ProblemResponse'
        '422':
          $ref: '#/components/responses/ProblemResponse'
        '429':
          $ref: '#/components/responses/ProblemResponse'
        '500':
          $ref: '#/components/responses/ProblemResponse'
  /v1/classes/{classId}/teachers/{teacherId}:
    delete:
      operationId: UnassignTeacherFromClass
      parameters:
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/CorrelationId'
      - $ref: '#/components/parameters/CausationId'
      - name: classId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: teacherId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '204':
          description: Unassigned
        '400':
          $ref: '#/components/responses/ProblemResponse'
        '401':
          $ref: '#/components/responses/ProblemResponse'
        '403':
          $ref: '#/components/responses/ProblemResponse'
        '404':
          $ref: '#/components/responses/ProblemResponse'
        '409':
          $ref: '#/components/responses/ProblemResponse'
        '422':
          $ref: '#/components/responses/ProblemResponse'
        '429':
          $ref: '#/components/responses/ProblemResponse'
        '500':
          $ref: '#/components/responses/ProblemResponse'
  /v1/roster/classes/{classId}/members:
    get:
      operationId: GetClassMembers
      parameters:
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/CorrelationId'
      - $ref: '#/components/parameters/CausationId'
      - name: classId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        required: false
        schema:
          type: string
          enum:
          - students
          - teachers
          - all
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersResponse'
        '400':
          $ref: '#/components/responses/ProblemResponse'
        '401':
          $ref: '#/components/responses/ProblemResponse'
        '403':
          $ref: '#/components/responses/ProblemResponse'
        '404':
          $ref: '#/components/responses/ProblemResponse'
        '409':
          $ref: '#/components/responses/ProblemResponse'
        '422':
          $ref: '#/components/responses/ProblemResponse'
        '429':
          $ref: '#/components/responses/ProblemResponse'
        '500':
          $ref: '#/components/responses/ProblemResponse'
  /v1/lookup/students:batch:
    post:
      operationId: BatchStudentLookup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  items:
                    type: string
                    format: uuid
                  maxItems: 5000
              required:
              - ids
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/StudentSummary'
        '400':
          $ref: '#/components/responses/ProblemResponse'
        '401':
          $ref: '#/components/responses/ProblemResponse'
        '403':
          $ref: '#/components/responses/ProblemResponse'
        '404':
          $ref: '#/components/responses/ProblemResponse'
        '409':
          $ref: '#/components/responses/ProblemResponse'
        '422':
          $ref: '#/components/responses/ProblemResponse'
        '429':
          $ref: '#/components/responses/ProblemResponse'
        '500':
          $ref: '#/components/responses/ProblemResponse'
      parameters:
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/CorrelationId'
      - $ref: '#/components/parameters/CausationId'
  /v1/bulk/students:upsert:
    post:
      operationId: BulkStudentsUpsert
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rows:
                  type: array
                  items:
                    $ref: '#/components/schemas/CreateStudentRequest'
                  maxItems: 50000
              required:
              - rows
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/ProblemResponse'
        '401':
          $ref: '#/components/responses/ProblemResponse'
        '403':
          $ref: '#/components/responses/ProblemResponse'
        '404':
          $ref: '#/components/responses/ProblemResponse'
        '409':
          $ref: '#/components/responses/ProblemResponse'
        '422':
          $ref: '#/components/responses/ProblemResponse'
        '429':
          $ref: '#/components/responses/ProblemResponse'
        '500':
          $ref: '#/components/responses/ProblemResponse'
      parameters:
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/CorrelationId'
      - $ref: '#/components/parameters/CausationId'
  /v1/bulk/jobs/{jobId}:
    get:
      operationId: GetBulkJobStatus
      parameters:
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/CorrelationId'
      - $ref: '#/components/parameters/CausationId'
      - name: jobId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobId:
                    type: string
                  status:
                    type: string
                  processed:
                    type: integer
                  failed:
                    type: integer
        '400':
          $ref: '#/components/responses/ProblemResponse'
        '401':
          $ref: '#/components/responses/ProblemResponse'
        '403':
          $ref: '#/components/responses/ProblemResponse'
        '404':
          $ref: '#/components/responses/ProblemResponse'
        '409':
          $ref: '#/components/responses/ProblemResponse'
        '422':
          $ref: '#/components/responses/ProblemResponse'
        '429':
          $ref: '#/components/responses/ProblemResponse'
        '500':
          $ref: '#/components/responses/ProblemResponse'
